class Controls extends React.Component{render(){return React.createElement("section",{className:"panel controls"},React.createElement("h2",null,"CONTROLS"),React.createElement("div",{className:"controls-row"},React.createElement("div",{className:"controls-row__title"},React.createElement("span",null,"colour theme")),React.createElement(ThemeToggleButton,{setTheme:this.props.setTheme,theme:this.props.theme})),React.createElement("div",{className:"controls-row",role:"radiogroup","aria-labelledby":"inputMode_label_id"},React.createElement("div",{className:"controls-row__title",id:"inputMode_label_id"},React.createElement("span",null,"input mode")),React.createElement(MenuToggleUI,{inputMode:this.props.inputMode,setInputMode:this.props.setInputMode})),React.createElement("div",{className:"controls-row"},React.createElement("div",{className:"controls-row__title"},React.createElement("span",null,"board status")),this.props.inputMode===InputMode.keyboard&&React.createElement(EnterBoardButton,{inputMode:this.props.inputMode}),React.createElement(ResetGameButtonUI,{reset:this.props.reset})))}}class MenuToggleUI extends React.Component{render(){return React.createElement(React.Fragment,null,React.createElement(InputOptionRadio,{activeInputMode:this.props.inputMode,cssPositionClass:" first",myInputMode:InputMode.mouse,setInputMode:this.props.setInputMode}),React.createElement(InputOptionRadio,{activeInputMode:this.props.inputMode,cssPositionClass:"",myInputMode:InputMode.touch,setInputMode:this.props.setInputMode}),React.createElement(InputOptionRadio,{activeInputMode:this.props.inputMode,cssPositionClass:" last",myInputMode:InputMode.keyboard,setInputMode:this.props.setInputMode}))}}class InputOptionRadio extends React.Component{constructor(e){super(e),this.handleChange=this.handleChange.bind(this)}handleChange(){this.props.setInputMode(this.props.myInputMode)}render(){var e=this.props.myInputMode===this.props.activeInputMode;return React.createElement("div",{className:"radioWrapper"+this.props.cssPositionClass},React.createElement("input",{type:"radio",id:this.props.myInputMode.name+"_id",name:"input_mode_name",value:this.props.myInputMode.name,checked:e,onChange:this.handleChange}),React.createElement("label",{htmlFor:this.props.myInputMode.name+"_id"},React.createElement("span",null,this.props.myInputMode.name)))}}class ThemeToggleButton extends React.Component{constructor(e){super(e),this.toggleTheme=this.toggleTheme.bind(this)}toggleTheme(){this.props.theme===DARK?this.props.setTheme(LIGHT):this.props.setTheme(DARK)}render(){var e=this.props.theme===DARK?"dark":"light",t=this.props.theme===DARK?"light":"dark";return React.createElement("button",{className:"theme-toggle",onClick:this.toggleTheme},React.createElement("div",{className:"option first"}),React.createElement("div",{className:"divider"},React.createElement("span",null,e+` mode is active: click to switch to ${t} mode`)),React.createElement("div",{className:"option last"}))}}class EnterBoardButton extends React.Component{focusInsideBoard(){document.querySelectorAll(".tile")[0].focus()}render(){return React.createElement("button",{className:"btn enterBoard",onClick:this.focusInsideBoard},React.createElement("span",null,"enter"))}}class ResetGameButtonUI extends React.Component{render(){return React.createElement("button",{className:"btn reset",id:"reset_btn_id",onClick:this.props.reset},React.createElement("span",null,"reset"))}}class Display{static hidden=new Display("hidden");static empty=new Display("empty");static number=new Display("number");static mine=new Display("mine");static flag=new Display("flag");constructor(e){this.name=e}toString(){return"Display."+this.name}}class BoardSection extends React.Component{constructor(e){super(e),this.closeMenu=this.closeMenu.bind(this),this.openMenu=this.openMenu.bind(this),this.getAdjColRange=this.getAdjColumnRange.bind(this),this.getAdjRowRange=this.getAdjRowRange.bind(this),this.getNumAdjacent=this.getNumAdjacentMines.bind(this),this.getTileEle=this.getTileEle.bind(this),this.getTileObj=this.getTileObj.bind(this),this.toggleFlag=this.toggleFlag.bind(this),this.unhideTile=this.unhideTile.bind(this),this.updateBoard=this.updateBoard.bind(this),this.state={newboard:this.newBoard.bind(this),board:this.newBoard(),explodedTile:null,gameId:null,isActive:!0,menuIsOpen:!1,menuPos:null,menuTileId:null}}static getDerivedStateFromProps(e,t){return null===t.gameId||t.gameId!==e.gameId?{...t,board:t.newboard(),explodedTile:null,gameId:e.gameId,isActive:!0,menuIsOpen:!1,menuPos:null,menuTileId:null}:e.isMenuMode||null===t.menuTileId?null:{...t,menuIsOpen:!1,menuPos:null,menuTileId:null}}componentDidMount(){this.state.isActive&&this.props.isGameOver&&0===this.props.safeTilesRemaining&&this.gameOverWon()}componentDidUpdate(){this.state.isActive&&this.props.isGameOver&&0===this.props.safeTilesRemaining&&this.gameOverWon()}newBoard(){for(var e=[],t=this.sample(this.props.numRows*this.props.numCols,this.props.numMines),s=0;s<this.props.numRows;s++){for(var i=[],n=0;n<this.props.numCols;n++){var a=t.includes(s*this.props.numCols+n);i.push({isMine:a,displayStatus:Display.hidden,numAdjacentMines:null})}e.push(i)}return e}sample(e,t){for(var s=[];0<t;){var i=Math.floor(Math.random()*e);s.includes(i)||(s.push(i),t--)}return s.sort((e,t)=>e-t)}updateBoard(i,n,a){this.setState(e=>({...e,board:e.board.map((e,s)=>e.map((e,t)=>s!==i||t!==n?e:a))}))}openMenu(t,s,i,n){this.setState(e=>({...e,menuIsOpen:!0,menuPos:{x:i,y:n},menuTileId:{row:t,column:s}}))}closeMenu(){this.setState(e=>({...e,menuIsOpen:!1,menuPos:null,menuTileId:null}))}getUnhiddenTile(e,t){var s=this.getTileObj(e,t);return s?.displayStatus!==Display.hidden?s:s.isMine?{...s,displayStatus:Display.mine}:0===(e=this.getNumAdjacentMines(e,t))?{...s,displayStatus:Display.empty}:{...s,displayStatus:Display.number,numAdjacentMines:e}}getNumAdjacentMines(e,t){let s=0;var i,n=this.getAdjRowRange(e),a=this.getAdjColRange(t);for(i in n){var o,l=n[i];for(o in a){var r=a[o];l===e&&r===t||this.state.board[l][r].isMine&&s++}}return s}getAdjRowRange(e){for(var t=e+1<this.state.board.length?e+1:this.state.board.length-1,s=[],i=0<=e-1?e-1:0;i<t+1;i++)s.push(i);return s}getAdjColumnRange(e){for(var t=e+1<this.state.board[0].length?e+1:this.state.board[0].length-1,s=[],i=0<=e-1?e-1:0;i<t+1;i++)s.push(i);return s}unhideTile(e,t,s={}){if(this.state.board[e][t].displayStatus===Display.hidden){var i=e+","+t;if(!(i in s)){s[i]=!0;i=this.getUnhiddenTile(e,t);if(this.updateBoard(e,t,i),i.isMine)this.gameOverLost(e,t);else if(this.props.updateProgress(),i.displayStatus===Display.empty){var n,a=this.getAdjRowRange(e),o=this.getAdjColRange(t);for(n in a){var l,r=a[n];for(l in o){var p=o[l];r===e&&p===t||this.unhideTile(r,p,s)}}}}}}toggleFlag(e,t){var s=this.state.board[e][t];s.displayStatus!==Display.flag?(this.updateBoard(e,t,{...s,displayStatus:Display.flag}),this.props.updateFlagCounter(1)):(this.updateBoard(e,t,{...s,displayStatus:Display.hidden}),this.props.updateFlagCounter(-1))}gameOverWon(){this.finishBoard(!0)}gameOverLost(t,s){this.setState(e=>({...e,explodedTile:{row:t,column:s}})),this.finishBoard(!1),this.props.setGameOver()}finishBoard(e){this.setState(e=>({...e,isActive:!1})),e?this.flagHiddenMines():this.unhideAllTiles()}flagHiddenMines(){for(var e=0;e<this.state.board.length;e++)for(var t=0;t<this.state.board[0].length;t++){var s=this.state.board[e][t];s.displayStatus===Display.hidden&&s.isMine&&this.toggleFlag(e,t)}}unhideAllTiles(){for(var e=0;e<this.state.board.length;e++)for(var t,s=0;s<this.state.board[0].length;s++)this.state.board[e][s].displayStatus===Display.hidden&&(t=this.getUnhiddenTile(e,s),this.updateBoard(e,s,t))}getTileEle(e,t){return document.querySelectorAll(".tile")[e*this.state.board[0].length+t]}getTileObj(e,t){return null===e||null===t?null:this.state.board[e][t]}render(){return React.createElement("section",{className:"panel boardContainer"},React.createElement("h2",null,"ASSIGNED GRID"),React.createElement(ProgressUI,{flagCount:this.props.flagCount,safeTilesRemaining:this.props.safeTilesRemaining,totalMines:this.props.totalMines}),this.props.isMenuMode&&this.state.menuIsOpen&&React.createElement(TileClickMenu,{closeMenu:this.closeMenu,getTileEle:this.getTileEle,getTileObj:this.getTileObj,isMenuMode:this.props.isMenuMode,menuPos:this.state.menuPos,menuTileId:this.state.menuTileId,toggleFlag:this.toggleFlag,unhideTile:this.unhideTile}),React.createElement(BoardUI,{board:this.state.board,closeMenu:this.closeMenu,explodedTile:this.state.explodedTile,getTileEle:this.getTileEle,isGameOver:this.props.isGameOver,isMenuMode:this.props.isMenuMode,menuTileId:this.state.menuTileId,openMenu:this.openMenu,safeTilesRemaining:this.props.safeTilesRemaining,toggleFlag:this.toggleFlag,unhideTile:this.unhideTile}))}}class ProgressUI extends React.Component{render(){var e=this.props.flagCount>this.props.totalMines;return React.createElement("section",{className:"progress"},React.createElement("p",null,React.createElement("span",{className:"label"},"mines (flagged/total)"),React.createElement("span",{className:"value"+(e?" error":"")},this.props.flagCount,"/",this.props.totalMines)),React.createElement("p",null,React.createElement("span",{className:"label"},"safe tiles remaining"),React.createElement("span",{className:"value"},this.props.safeTilesRemaining)))}}class TileClickMenu extends React.Component{constructor(e){super(e),this.activeTileIsFlagged=this.activeTileIsFlagged.bind(this),this.handleKeyDown=this.handleKeyDown.bind(this),this.toggleFlag=this.toggleFlag.bind(this),this.unhideTile=this.unhideTile.bind(this),this.state={selectedId:0}}setSelected(t){this.setState(e=>({...e,selectedId:t}))}closeMenu(){this.props.getTileEle(this.props.menuTileId?.row,this.props.menuTileId?.column).focus(),this.props.closeMenu()}unhideTile(){this.props.unhideTile(this.props.menuTileId?.row,this.props.menuTileId?.column),this.closeMenu()}toggleFlag(){this.props.toggleFlag(this.props.menuTileId?.row,this.props.menuTileId?.column),this.closeMenu()}activeTileIsFlagged(){var e=this.props.getTileObj(this.props.menuTileId?.row,this.props.menuTileId?.column);return null===e?null:e.displayStatus===Display.flag}handleKeyDown(t){if(9===t.keyCode||27===t.keyCode)t.preventDefault(),this.closeMenu();else if(38===t.keyCode||40===t.keyCode){t.preventDefault();let e=this.state.selectedId;var s=document.querySelectorAll(".menu")[0].getElementsByTagName("button"),i=s.length-1;38===t.keyCode?--e<0&&(e=i):40===t.keyCode&&++e>i&&(e=0),this.setSelected(e),s[e].focus()}}getPositioningStyle(){return{top:this.props.menuPos.y+"px",left:this.props.menuPos.x+"px"}}render(){var e=this.activeTileIsFlagged(),e=null!==e&&e?"unflag":"addflag";return React.createElement("div",{className:"overlayWrapper menu",style:this.getPositioningStyle()},React.createElement("section",{className:"tileMenu",onKeyDown:this.handleKeyDown},React.createElement("button",{autoFocus:!0,className:"tileMenuBtn unhideTile",onClick:this.unhideTile}),React.createElement("button",{className:"tileMenuBtn "+e,onClick:this.toggleFlag})))}}class BoardUI extends React.Component{render(){return React.createElement("div",{id:"board_id",className:"board"},this.props.board.map((e,t)=>React.createElement(BoardRowUI,{key:t,closeMenu:this.props.closeMenu,explodedTile:this.props.explodedTile,getTileEle:this.props.getTileEle,isGameOver:this.props.isGameOver,isMenuMode:this.props.isMenuMode,maxCol:this.props.board[0].length-1,maxRow:this.props.board.length-1,menuTileId:this.props.menuTileId,openMenu:this.props.openMenu,rowId:t,safeTilesRemaining:this.props.safeTilesRemaining,tileRow:e,toggleFlag:this.props.toggleFlag,unhideTile:this.props.unhideTile})))}}class BoardRowUI extends React.Component{render(){return React.createElement("div",{className:"board-row"},this.props.tileRow.map((e,t)=>React.createElement(Tile,{key:t,adjMines:e.numAdjacentMines,colId:t,closeMenu:this.props.closeMenu,display:e.displayStatus.name,getTileEle:this.props.getTileEle,isExplodedTile:this.props.explodedTile?.row===this.props.rowId&&this.props.explodedTile?.column===t,isGameOver:this.props.isGameOver,isMenuMode:this.props.isMenuMode,isMine:e.isMine,isWon:this.props.isGameOver&&0===this.props.safeTilesRemaining,maxCol:this.props.maxCol,maxRow:this.props.maxRow,menuTileId:this.props.menuTileId,openMenu:this.props.openMenu,rowId:this.props.rowId,toggleFlag:this.props.toggleFlag,unhideTile:this.props.unhideTile})))}}class Tile extends React.Component{constructor(e){super(e),this.disableContextMenu=this.disableContextMenu.bind(this),this.handleClick=this.handleClick.bind(this),this.handleKeydown=this.handleKeydown.bind(this),this.hasActiveMenu=this.hasActiveMenu.bind(this)}handleClick(e){var t;this.props.isGameOver||(this.props.isMenuMode?this.hasActiveMenu()?this.props.closeMenu():(t=this.getMenuCoords(e),this.props.openMenu(this.props.rowId,this.props.colId,t.x,t.y)):this.handleMouseClick(e))}handleMouseClick(e){var t;"which"in e?t=3==e.which:"button"in e&&(t=2==e.button),t?this.props.toggleFlag(this.props.rowId,this.props.colId):this.props.unhideTile(this.props.rowId,this.props.colId)}disableContextMenu(e){this.props.isGameOver||(e.preventDefault(),this.handleClick(e))}hasActiveMenu(){return this.props.menuTileId?.row===this.props.rowId&&this.props.menuTileId?.column===this.props.colId}getMenuCoords(e){var t=document.querySelector(".boardContainer").getBoundingClientRect();let s=0,i=0;var n,a=this.props.getTileEle(this.props.rowId,this.props.colId).getBoundingClientRect();return i=void 0===e.clientX||void 0===e.clientX?(n=Math.round((a.right-a.left)/2),s=a.left-t.left+n,a.bottom-t.top):(n=(a.bottom-a.top)/2.5,s=e.clientX-t.left,e.clientY-t.top+n),{x:this.getXPosWithMenuCentred(s),y:i}}getXPosWithMenuCentred(e){var t=this.props.getTileEle(this.props.rowId,this.props.colId).getBoundingClientRect(),t=t.right-t.left;return e-Math.round(1.75*t/2)}handleKeydown(s){if(9===s.keyCode||27===s.keyCode)s.preventDefault(),document.getElementById("reset_btn_id").focus();else if(13===s.keyCode||32===s.keyCode)s.preventDefault(),this.handleClick(s);else if(37===s.keyCode||38===s.keyCode||39===s.keyCode||40===s.keyCode){s.preventDefault();let e=this.props.rowId,t=this.props.colId;38===s.keyCode?--e<0&&(e=this.props.maxRow):40===s.keyCode?++e>this.props.maxRow&&(e=0):37===s.keyCode?--t<0&&(t=this.props.maxCol):39===s.keyCode&&++t>this.props.maxCol&&(t=0),this.props.getTileEle(e,t).focus()}}getCssClassFlag(){var e=this.props.display===Display.flag.name&&!this.props.isMine;return this.props.isGameOver&&e?" wrong":""}getCssClassExploded(){return this.props.isExplodedTile?" exploded":""}getCssClassMenuActive(){return this.props.isMenuMode&&this.hasActiveMenu()?" menuActive":""}getCssNumberSpecific(){return this.props.display===Display.number.name?" adj"+this.props.adjMines:""}getConditionalCssClasses(){return[this.props.display,this.getCssClassFlag(),this.getCssClassExploded(),this.getCssClassMenuActive(),this.getCssNumberSpecific()].join("")}render(){var e=this.getConditionalCssClasses();return React.createElement("div",{className:"tile "+e,tabIndex:-1,onClick:this.handleClick,onContextMenu:this.disableContextMenu,onKeyDown:this.handleKeydown},this.props.display===Display.number.name&&React.createElement("span",null,this.props.adjMines))}}const DARK="dark-theme",LIGHT="light-theme";class InputMode{static mouse=new InputMode("mouse");static keyboard=new InputMode("keyboard");static touch=new InputMode("touch");constructor(e){this.name=e}toString(){return"InputMode."+this.name}}class MinesweeperGame extends React.Component{constructor(e){super(e),this.updateProgress=this.updateProgress.bind(this),this.setGameOver=this.setGameOver.bind(this),this.updateFlagCounter=this.updateFlagCounter.bind(this),this.reset=this.reset.bind(this),this.setTheme=this.setTheme.bind(this),this.setInputMode=this.setInputMode.bind(this),this.state={flagCounter:0,gameId:1,gameOver:!1,isMenuMode:!1,inputMode:InputMode.mouse,maxSafeTiles:e.numRows*e.numCols-e.numMines,safeTilesRemaining:e.numRows*e.numCols-e.numMines,theme:window.matchMedia("(prefers-color-scheme: dark)")?DARK:LIGHT}}reset(){this.setState(e=>({...e,gameId:e.gameId+1,gameOver:!1,flagCounter:0,safeTilesRemaining:e.maxSafeTiles})),document.querySelectorAll(".tile")[0].focus()}updateProgress(){this.state.safeTilesRemaining<=0||(1===this.state.safeTilesRemaining?this.setGameWon():this.updateSafeTiles(-1))}setGameWon(){this.setState(e=>({...e,gameOver:!0,safeTilesRemaining:0}))}setGameOver(){this.setState(e=>({...e,gameOver:!0}))}updateSafeTiles(t){this.setState(e=>({...e,safeTilesRemaining:e.safeTilesRemaining+t}))}updateFlagCounter(t){this.setState(e=>({...e,flagCounter:e.flagCounter+t}))}setTheme(t){this.setState(e=>({...e,theme:t}))}setInputMode(t){this.setState(e=>({...e,inputMode:t}))}render(){var e=this.state.inputMode===InputMode.touch||this.state.inputMode===InputMode.keyboard;return React.createElement("div",{className:"app-body "+this.state.theme},React.createElement("div",{className:"minesweeper"},React.createElement("h1",null,"MINESWEEPER"),React.createElement(Controls,{isMenuMode:e,reset:this.reset,setTheme:this.setTheme,theme:this.state.theme,setInputMode:this.setInputMode,inputMode:this.state.inputMode}),React.createElement(BoardSection,{flagCount:this.state.flagCounter,gameId:this.state.gameId,isMenuMode:e,isGameOver:this.state.gameOver,numCols:this.props.numCols,numMines:this.props.numMines,numRows:this.props.numRows,safeTilesRemaining:this.state.safeTilesRemaining,setGameOver:this.setGameOver,totalMines:this.props.numMines,updateFlagCounter:this.updateFlagCounter,updateProgress:this.updateProgress}),React.createElement(Result,{gameId:this.state.gameId,isGameOver:this.state.gameOver,safeTilesRemaining:this.state.safeTilesRemaining})))}}class Result extends React.Component{constructor(e){super(e),this.handleOverlayClose=this.handleOverlayClose.bind(this),this.state={gameId:null,wantOverlay:!0}}static getDerivedStateFromProps(e,t){return null===t.gameId||t.gameId!==e.gameId?{...t,wantOverlay:!0,gameId:e.gameId}:null}removeOverlay(){this.setState(e=>({...e,wantOverlay:!1}))}handleOverlayClose(){document.getElementById("reset_btn_id").focus(),this.removeOverlay()}render(){var e;return this.props.isGameOver?(e=0===this.props.safeTilesRemaining,this.state.wantOverlay?React.createElement(PanelOverlayWrapper,{handleOverlayClose:this.handleOverlayClose,cssClass:"result"},React.createElement(ResultContents,{won:e})):React.createElement("section",{className:"panel result"},React.createElement(ResultContents,{won:e}))):null}}class ResultContents extends React.Component{render(){var e=this.props.won?"Success":"Failure",t=this.props.won?"Lives saved: incalculable. Congratulations++":"Explosions chaining. All hope lost. Goodb-";return React.createElement(React.Fragment,null,React.createElement("h2",null,"MISSION RESULT"),React.createElement("h3",null,e.toUpperCase()),React.createElement("p",null,t.toLowerCase()))}}class PanelOverlayWrapper extends React.Component{constructor(e){super(e),this.getOverlayPositionStyle=this.getOverlayPositionStyle.bind(this)}getOverlayPositionStyle(){var e=document.getElementById("board_id").getBoundingClientRect();return{top:e.top+Math.round((e.bottom-e.top)/4)+"px"}}render(){return React.createElement("div",{className:"overlayWrapper message",style:this.getOverlayPositionStyle()},React.createElement("section",{className:null===this.props.cssClass?"panel":"panel "+this.props.cssClass},React.createElement("button",{autoFocus:!0,className:"close",onClick:this.props.handleOverlayClose},String.fromCharCode(8211)),this.props.children))}}const root=ReactDOM.createRoot(document.getElementById("root"));root.render(React.createElement(MinesweeperGame,{numRows:10,numCols:10,numMines:10}));